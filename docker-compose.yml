version: '2.1'
volumes:
  collected_static: {}
services:

  # QED Django front-end
  qed_django:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        version: ${VERSION:-latest}  # passing VERSION env var to Dockerfile as ARG, default = latest
    #image: quanted/qed:${VERSION:-latest}  # use qed image w/ tag = VERSION, default = latest
    expose:
      - "8080"
    volumes:
      - collected_static:/src/collected_static
      - .:/src  # map qed/ to container's /src for updating w/out rebuilding images
    environment:
      - REDIS_HOSTNAME=redis
      #these echo in the environmental variable to the running docker container
      #so that is can be picked up by the django settings
      - DOCKER_HOSTNAME=docker
    links:
      - redis
      - qed-tomcat

  # Redis (message broker)
  redis:
    image: redis:latest
    hostname: redis
    expose:
      - "6379"

  # ubertool_cts nodejs submodule
  cts_nodejs:
    build: ./cts_nodejs
    image: cts-nodejs
    expose:
      - "4000"
    environment:
      - NODEJS_HOST=cts_nodejs
      - NODEJS_PORT=4000
      - REDIS_HOSTNAME=redis
      - REDIS_PORT=6379
    links:
      - redis

  # # Celery worker - manager calc
  worker_manager:
    build:
      context: ./cts_celery
      dockerfile: Dockerfile
      args:
        version: ${VERSION:-latest}
    image: cts-celery
    command: celery worker -A tasks -Q manager_queue -l info -n manager_worker -c 1
    links:
      - redis
    environment:
      - REDIS_HOSTNAME=redis
      - DOCKER_HOSTNAME=${HOSTNAME}

  # # Celery worker - CTS calc
  worker_cts:
    build:
      context: ./cts_celery
      dockerfile: Dockerfile
      args:
        version: ${VERSION:-latest}
    image: cts-celery
    command: celery worker -A tasks -Q cts_queue -l info -n cts_worker -c 2
    links:
      - redis
      - qed_django
      - qed-tomcat
    environment:
      - REDIS_HOSTNAME=redis
      - DOCKER_HOSTNAME=${HOSTNAME}

  qed_nginx:
    restart: always
    build: ./cts_nginx
    # build: ./qed_nginx
    ports:
      - "80:80"
      - "443:443"
    links:
      - qed_django:uwsgi_django  # Nginx.conf can reference "qed_django" service with the hostname 'uwsgi' or 'qed_django'
      - cts_nodejs:cts_nodejs
      # - cts_stress:cts_stress
    volumes:
      - /var/www/nginx/certs:/etc/nginx/qed # this points to the keys directory
    volumes_from:
      - qed_django:ro  # Mount all volumes from "qed_django" to NGINX, so it can access the collected static files

  qed-tomcat:
    build:
      context: .
      dockerfile: Dockerfile_Tomcat
    # image: qed_tomcat:${VERSION:-latest}
    expose:
      - "8080"
    environment:
      - JAVA_OPTS=-Xmx512m
    volumes:
      - ./secrets/tomcat/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml
      - ./secrets/tomcat/webapps:/usr/local/tomcat/webapps
      - ./secrets/tomcat/chemaxon/licenses:/home/tomcat/.chemaxon/licenses

  # cts_stress:
  #   build:
  #     context: ./cts_stress
  #     dockerfile: Dockerfile
  #   image: cts_stress:dev
  #   ports:
  #     - "4001:80"
  #   environment:
  #     - STRESS_SERVER_HOST=cts_stress
  #     - STRESS_SERVER_PORT=80